/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  OOV3_GettingStarted,
  OOV3_GettingStartedInterface,
} from "../OOV3_GettingStarted";

const _abi = [
  {
    inputs: [],
    name: "assertTruth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assertedClaim",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assertionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssertion",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "arbitrateViaEscalationManager",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "discardOracle",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "validateDisputers",
                type: "bool",
              },
              {
                internalType: "address",
                name: "assertingCaller",
                type: "address",
              },
              {
                internalType: "address",
                name: "escalationManager",
                type: "address",
              },
            ],
            internalType:
              "struct OptimisticOracleV3Interface.EscalationManagerSettings",
            name: "escalationManagerSettings",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "asserter",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "assertionTime",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "expirationTime",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "settlementResolution",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "domainId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "identifier",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "callbackRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
        ],
        internalType: "struct OptimisticOracleV3Interface.Assertion",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssertionResult",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "settleAndGetAssertionResult",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x600080546001600160a01b031916739923d42ef695b5dd9911d05ac944d4caca3c4eab17905560e0604052602e608081815290610a4260a03960019061004590826100f7565b5034801561005257600080fd5b506101b6565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061008257607f821691505b6020821081036100a257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100f257600081815260208120601f850160051c810160208610156100cf5750805b601f850160051c820191505b818110156100ee578281556001016100db565b5050505b505050565b81516001600160401b0381111561011057610110610058565b6101248161011e845461006e565b846100a8565b602080601f83116001811461015957600084156101415750858301515b600019600386901b1c1916600185901b1785556100ee565b600085815260208120601f198616915b8281101561018857888601518255948401946001909101908401610169565b50858210156101a65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61087d806101c56000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630d80da74146100675780633421390b146100835780637facaf3f1461008d5780639a3ddabc146100a5578063bc1dbc52146100ba578063c1a8ec2c146100c2575b600080fd5b61007060025481565b6040519081526020015b60405180910390f35b61008b6100d7565b005b610095610152565b604051901515815260200161007a565b6100ad6101ce565b60405161007a91906103b0565b6100956102cd565b6100ca610322565b60405161007a91906104b3565b600054604051630dac4ebd60e21b81526001600160a01b03909116906336b13af49061010a90600190309060040161053b565b6020604051808303816000875af1158015610129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014d9190610600565b600255565b6000805460025460405163e39dfd7f60e01b81526001600160a01b039092169163e39dfd7f916101889160040190815260200190565b602060405180830381865afa1580156101a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c9919061062e565b905090565b6040805161022081018252600061018082018181526101a083018290526101c083018290526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915260005460025460405163220c0a2160e21b81526001600160a01b039092169163883028849161028b9160040190815260200190565b61020060405180830381865afa1580156102a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c99190610767565b60008054600254604051638ea2f2ab60e01b81526001600160a01b0390921691638ea2f2ab916103039160040190815260200190565b6020604051808303816000875af11580156101a5573d6000803e3d6000fd5b6001805461032f90610501565b80601f016020809104026020016040519081016040528092919081815260200182805461035b90610501565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b505050505081565b81518051151582526020808201511515818401526040808301511515818501526060808401516001600160a01b039081168287015260809485015181168587015292860151831660a08601529085015167ffffffffffffffff1660c0850152840151151560e084015290830151908116610100808401919091526102008301919060a085015191506101206104508186018467ffffffffffffffff169052565b60c086015192506101406104678187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c08601529401519093166101e090920191909152919050565b600060208083528351808285015260005b818110156104e0578581018301518582016040015282016104c4565b506000604082860101526040601f19601f8301168501019250505092915050565b600181811c9082168061051557607f821691505b60208210810361053557634e487b7160e01b600052602260045260246000fd5b50919050565b60408152600080845481600182811c91508083168061055b57607f831692505b6020808410820361057a57634e487b7160e01b86526022600452602486fd5b604088018490526060880182801561059957600181146105af576105da565b60ff198716825285151560051b820197506105da565b60008c81526020902060005b878110156105d4578154848201529086019084016105bb565b83019850505b50508596506105f38189018a6001600160a01b03169052565b5050505050509392505050565b60006020828403121561061257600080fd5b5051919050565b8051801515811461062957600080fd5b919050565b60006020828403121561064057600080fd5b61064982610619565b9392505050565b604051610180810167ffffffffffffffff8111828210171561068257634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b038116811461069d57600080fd5b50565b805161062981610688565b600060a082840312156106bd57600080fd5b60405160a0810181811067ffffffffffffffff821117156106ee57634e487b7160e01b600052604160045260246000fd5b6040529050806106fd83610619565b815261070b60208401610619565b602082015261071c60408401610619565b6040820152606083015161072f81610688565b6060820152608083015161074281610688565b6080919091015292915050565b805167ffffffffffffffff8116811461062957600080fd5b6000610200828403121561077a57600080fd5b610782610650565b61078c84846106ab565b815261079a60a084016106a0565b60208201526107ab60c0840161074f565b60408201526107bc60e08401610619565b60608201526101006107cf8185016106a0565b60808301526101206107e281860161074f565b60a08401526101406107f5818701610619565b60c08501526101608087015160e0860152610180870151848601526101a0870151838601526108276101c088016106a0565b828601526108386101e088016106a0565b9085015250919594505050505056fea2646970667358221220c54df0930b23aa504e3873ed32939ef9e1da565cedcdd47ef9448c9dfe5b2d9e64736f6c63430008100033417267656e74696e6120776f6e207468652032303232204669666120776f726c642063757020696e205161746172";

type OOV3_GettingStartedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OOV3_GettingStartedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OOV3_GettingStarted__factory extends ContractFactory {
  constructor(...args: OOV3_GettingStartedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OOV3_GettingStarted & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OOV3_GettingStarted__factory {
    return super.connect(runner) as OOV3_GettingStarted__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OOV3_GettingStartedInterface {
    return new Interface(_abi) as OOV3_GettingStartedInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OOV3_GettingStarted {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OOV3_GettingStarted;
  }
}
