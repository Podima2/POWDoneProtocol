/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_permittedDistributors",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "airdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_distributors",
        type: "address",
      },
    ],
    name: "isPermittedDistributors",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "permittedDistributors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015a3380380620015a383398101604081905262000034916200028c565b6040518060400160405280601281526020017150726f6f66206f6620576f726b20446f6e6560701b815250604051806040016040528060048152602001631413d5d160e21b81525081600390816200008d9190620003ec565b5060046200009c8282620003ec565b505050620000d933620000b46200010860201b60201c565b620000c49060ff16600a620005cd565b620000d390620f4240620005e2565b6200010d565b600580546001600160a01b03191633179055805162000100906006906020840190620001d8565b50506200061a565b601290565b6001600160a01b038216620001685760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200017c919062000604565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b82805482825590600052602060002090810192821562000230579160200282015b828111156200023057825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001f9565b506200023e92915062000242565b5090565b5b808211156200023e576000815560010162000243565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200028757600080fd5b919050565b60006020808385031215620002a057600080fd5b82516001600160401b0380821115620002b857600080fd5b818501915085601f830112620002cd57600080fd5b815181811115620002e257620002e262000259565b8060051b604051601f19603f830116810181811085821117156200030a576200030a62000259565b6040529182528482019250838101850191888311156200032957600080fd5b938501935b82851015620003525762000342856200026f565b845293850193928501926200032e565b98975050505050505050565b600181811c908216806200037357607f821691505b6020821081036200039457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001d357600081815260208120601f850160051c81016020861015620003c35750805b601f850160051c820191505b81811015620003e457828155600101620003cf565b505050505050565b81516001600160401b0381111562000408576200040862000259565b62000420816200041984546200035e565b846200039a565b602080601f8311600181146200045857600084156200043f5750858301515b600019600386901b1c1916600185901b178555620003e4565b600085815260208120601f198616915b82811015620004895788860151825594840194600190910190840162000468565b5085821015620004a85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200050f578160001904821115620004f357620004f3620004b8565b808516156200050157918102915b93841c9390800290620004d3565b509250929050565b6000826200052857506001620005c7565b816200053757506000620005c7565b81600181146200055057600281146200055b576200057b565b6001915050620005c7565b60ff8411156200056f576200056f620004b8565b50506001821b620005c7565b5060208310610133831016604e8410600b8410161715620005a0575081810a620005c7565b620005ac8383620004ce565b8060001904821115620005c357620005c3620004b8565b0290505b92915050565b6000620005db838362000517565b9392505050565b6000816000190483118215151615620005ff57620005ff620004b8565b500290565b80820180821115620005c757620005c7620004b8565b610f79806200062a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806365897a621161009757806395d89b411161006657806395d89b4114610211578063a457c2d714610219578063a9059cbb1461022c578063dd62ed3e1461023f57600080fd5b806365897a62146101ad57806367243482146101c057806370a08231146101d55780638da5cb5b146101fe57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f5780633be3ccc11461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610252565b60405161010f9190610bcc565b60405180910390f35b61012b610126366004610c02565b6102e4565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610c2c565b6102fe565b6040516012815260200161010f565b61012b61017d366004610c02565b610322565b610195610190366004610c68565b610344565b6040516001600160a01b03909116815260200161010f565b61012b6101bb366004610c81565b61036e565b6101d36101ce366004610d72565b6103d7565b005b61013f6101e3366004610c81565b6001600160a01b031660009081526020819052604090205490565b600554610195906001600160a01b031681565b6101026106d6565b61012b610227366004610c02565b6106e5565b61012b61023a366004610c02565b610760565b61013f61024d366004610e32565b61076e565b60606003805461026190610e65565b80601f016020809104026020016040519081016040528092919081815260200182805461028d90610e65565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000336102f2818585610799565b60019150505b92915050565b60003361030c8582856108bd565b610317858585610937565b506001949350505050565b6000336102f2818585610335838361076e565b61033f9190610eb5565b610799565b6006818154811061035457600080fd5b6000918252602090912001546001600160a01b0316905081565b6000805b6006548110156103ce57826001600160a01b03166006828154811061039957610399610ec8565b6000918252602090912001546001600160a01b0316036103bc5750600192915050565b806103c681610ede565b915050610372565b50600092915050565b6005546001600160a01b03163314806103f457506103f43361036e565b61045e5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79206f776e6572206f72207065726d697474656420646973747269627560448201526f0746f72732063616e2061697264726f760841b60648201526084015b60405180910390fd5b80518251146104d55760405162461bcd60e51b815260206004820152603760248201527f526563697069656e747320616e6420616d6f756e747320617272617973206d7560448201527f73742068617665207468652073616d65206c656e6774680000000000000000006064820152608401610455565b6040805180820190915260138152724f776e6572206164647265737320697320257360681b602082015260055461051591906001600160a01b0316610adb565b61054b6040518060400160405280601481526020017353656e646572206164647265737320697320257360601b81525033610adb565b6040805180820190915260138152724f776e65722062616c616e636520697320257360681b60208201526005546105aa91906105a5906001600160a01b03166001600160a01b031660009081526020819052604090205490565b610b24565b60005b82518110156106d15760008382815181106105ca576105ca610ec8565b6020026020010151905060008383815181106105e8576105e8610ec8565b6020908102919091018101516005546001600160a01b03166000908152918290526040909120549091508111156106615760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f75676820746f6b656e7320746f2061697264726f70000000006044820152606401610455565b600554610678906001600160a01b03168383610937565b6005546040518281526001600160a01b038481169216907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505080806106c990610ede565b9150506105ad565b505050565b60606004805461026190610e65565b600033816106f3828661076e565b9050838110156107535760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610455565b6103178286868403610799565b6000336102f2818585610937565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166107fb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610455565b6001600160a01b03821661085c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610455565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006108c9848461076e565b9050600019811461093157818110156109245760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610455565b6109318484848403610799565b50505050565b6001600160a01b03831661099b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610455565b6001600160a01b0382166109fd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610455565b6001600160a01b03831660009081526020819052604090205481811015610a755760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610455565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610931565b610b208282604051602401610af1929190610ef7565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610b65565b5050565b610b208282604051602401610b3a929190610f21565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000815180845260005b81811015610bac57602081850181015186830182015201610b90565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610bdf6020830184610b86565b9392505050565b80356001600160a01b0381168114610bfd57600080fd5b919050565b60008060408385031215610c1557600080fd5b610c1e83610be6565b946020939093013593505050565b600080600060608486031215610c4157600080fd5b610c4a84610be6565b9250610c5860208501610be6565b9150604084013590509250925092565b600060208284031215610c7a57600080fd5b5035919050565b600060208284031215610c9357600080fd5b610bdf82610be6565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610cdb57610cdb610c9c565b604052919050565b600067ffffffffffffffff821115610cfd57610cfd610c9c565b5060051b60200190565b600082601f830112610d1857600080fd5b81356020610d2d610d2883610ce3565b610cb2565b82815260059290921b84018101918181019086841115610d4c57600080fd5b8286015b84811015610d675780358352918301918301610d50565b509695505050505050565b60008060408385031215610d8557600080fd5b823567ffffffffffffffff80821115610d9d57600080fd5b818501915085601f830112610db157600080fd5b81356020610dc1610d2883610ce3565b82815260059290921b84018101918181019089841115610de057600080fd5b948201945b83861015610e0557610df686610be6565b82529482019490820190610de5565b96505086013592505080821115610e1b57600080fd5b50610e2885828601610d07565b9150509250929050565b60008060408385031215610e4557600080fd5b610e4e83610be6565b9150610e5c60208401610be6565b90509250929050565b600181811c90821680610e7957607f821691505b602082108103610e9957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102f8576102f8610e9f565b634e487b7160e01b600052603260045260246000fd5b600060018201610ef057610ef0610e9f565b5060010190565b604081526000610f0a6040830185610b86565b905060018060a01b03831660208301529392505050565b604081526000610f346040830185610b86565b9050826020830152939250505056fea26469706673582212203f8357ff0e17f0012d7ed70c49ff82b9e6de2a047184894f55dd31985c5fe75a64736f6c63430008100033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _permittedDistributors: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_permittedDistributors, overrides || {});
  }
  override deploy(
    _permittedDistributors: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_permittedDistributors, overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
